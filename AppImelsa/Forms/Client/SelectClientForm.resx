<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="StyleManager1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="PictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>